{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/marco/Documents/project_react/alura_frontend/proj_tws/src/components/listaAcionamentos/ListaAcionamentos.jsx\";\nimport MenuLateral from \"../../components/menulateral/menu_lateral\";\nimport \"./Listaacionamentos.css\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction listaAcionamento() {\n  var _s = $RefreshSig$();\n\n  const columns = [{\n    id: 'name',\n    label: 'Name',\n    minWidth: 170\n  }, {\n    id: 'code',\n    label: 'ISO\\u00a0Code',\n    minWidth: 100\n  }, {\n    id: 'population',\n    label: 'Population',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toLocaleString('en-US')\n  }, {\n    id: 'size',\n    label: 'Size\\u00a0(km\\u00b2)',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toLocaleString('en-US')\n  }, {\n    id: 'density',\n    label: 'Density',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }];\n\n  function createData(name, code, population, size) {\n    const density = population / size;\n    return {\n      name,\n      code,\n      population,\n      size,\n      density\n    };\n  }\n\n  const rows = [createData('India', 'IN', 1324171354, 3287263), createData('China', 'CN', 1403500365, 9596961), createData('Italy', 'IT', 60483973, 301340), createData('United States', 'US', 327167434, 9833520), createData('Canada', 'CA', 37602103, 9984670), createData('Australia', 'AU', 25475400, 7692024), createData('Germany', 'DE', 83019200, 357578), createData('Ireland', 'IE', 4857000, 70273), createData('Mexico', 'MX', 126577691, 1972550), createData('Japan', 'JP', 126317000, 377973), createData('France', 'FR', 67022000, 640679), createData('United Kingdom', 'GB', 67545757, 242495), createData('Russia', 'RU', 146793744, 17098246), createData('Nigeria', 'NG', 200962417, 923768), createData('Brazil', 'BR', 210147125, 8515767)];\n  const useStyles = makeStyles({\n    root: {\n      width: '100%'\n    },\n    container: {\n      maxHeight: 440\n    }\n  });\n\n  function StickyHeadTable() {\n    _s();\n\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n      setRowsPerPage(+event.target.value);\n      setPage(0);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(StickyHeadTable, \"1LSjuq2DZUwZxE9BYIdgLLfYYP4=\", false, function () {\n    return [useStyles];\n  });\n}\n\nexport default listaAcionamento;","map":{"version":3,"sources":["/home/marco/Documents/project_react/alura_frontend/proj_tws/src/components/listaAcionamentos/ListaAcionamentos.jsx"],"names":["MenuLateral","React","useState","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","listaAcionamento","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","useStyles","root","width","container","maxHeight","StickyHeadTable","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","length"],"mappings":"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","sourcesContent":["import MenuLateral from \"../../components/menulateral/menu_lateral\"\nimport \"./Listaacionamentos.css\"\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction listaAcionamento() {\n\n    const columns = [\n        { id: 'name', label: 'Name', minWidth: 170 },\n        { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n        {\n            id: 'population',\n            label: 'Population',\n            minWidth: 170,\n            align: 'right',\n            format: (value) => value.toLocaleString('en-US'),\n        },\n        {\n            id: 'size',\n            label: 'Size\\u00a0(km\\u00b2)',\n            minWidth: 170,\n            align: 'right',\n            format: (value) => value.toLocaleString('en-US'),\n        },\n        {\n            id: 'density',\n            label: 'Density',\n            minWidth: 170,\n            align: 'right',\n            format: (value) => value.toFixed(2),\n        },\n    ];\n\n    function createData(name, code, population, size) {\n        const density = population / size;\n        return { name, code, population, size, density };\n    }\n\n    const rows = [\n        createData('India', 'IN', 1324171354, 3287263),\n        createData('China', 'CN', 1403500365, 9596961),\n        createData('Italy', 'IT', 60483973, 301340),\n        createData('United States', 'US', 327167434, 9833520),\n        createData('Canada', 'CA', 37602103, 9984670),\n        createData('Australia', 'AU', 25475400, 7692024),\n        createData('Germany', 'DE', 83019200, 357578),\n        createData('Ireland', 'IE', 4857000, 70273),\n        createData('Mexico', 'MX', 126577691, 1972550),\n        createData('Japan', 'JP', 126317000, 377973),\n        createData('France', 'FR', 67022000, 640679),\n        createData('United Kingdom', 'GB', 67545757, 242495),\n        createData('Russia', 'RU', 146793744, 17098246),\n        createData('Nigeria', 'NG', 200962417, 923768),\n        createData('Brazil', 'BR', 210147125, 8515767),\n    ];\n\n    const useStyles = makeStyles({\n        root: {\n            width: '100%',\n        },\n        container: {\n            maxHeight: 440,\n        },\n    });\n\n    function StickyHeadTable() {\n        const classes = useStyles();\n        const [page, setPage] = React.useState(0);\n        const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n        const handleChangePage = (event, newPage) => {\n            setPage(newPage);\n        };\n\n        const handleChangeRowsPerPage = (event) => {\n            setRowsPerPage(+event.target.value);\n            setPage(0);\n        };\n\n        return (\n            <Paper className={classes.root}>\n                <TableContainer className={classes.container}>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                        {columns.map((column) => {\n                                            const value = row[column.id];\n                                            return (\n                                                <TableCell key={column.id} align={column.align}>\n                                                    {column.format && typeof value === 'number' ? column.format(value) : value}\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        );\n    }\n}\n\nexport default listaAcionamento"]},"metadata":{},"sourceType":"module"}