{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/marco/Documents/project_react/alura_frontend/proj_tws/src/components/formulario.jsx\";\nimport \"./formulario.css\";\nimport React, { useState } from 'react';\nimport { TextField, Button, Switch, FormControlLabel } from '@material-ui/core/';\n\nfunction FormularioJob() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FormularioCadastro_div\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"FormularioCadastro_form\",\n      onSubmit: event => {\n        // props recebe parâmetro da classe pai\n        event.preventDefault(); //Não permite que o botão do formulário recarregue a página, mas sim execute o submit\n        // let dicionario = { nome, sobrenome, cpf, promocoes, novidades }\n        // let lista = [nome, sobrenome, cpf, promocoes, novidades]\n        // let array = [{ nome, sobrenome, cpf, promocoes, novidades }]\n        // console.log(dicionario, typeof (dicionario))\n        // console.log(dicionario.sobrenome)\n        // console.log(lista, typeof (lista))\n        // console.log(lista[1])\n        // console.log(array, typeof (array))\n        // console.log(array[0].sobrenome)\n        // console.log(nome, sobrenome, cpf, promocoes, novidades)\n\n        props.aoEnviar({\n          nome,\n          sobrenome,\n          cpf,\n          promocoes,\n          novidades\n        }); //aoEnviar é a func do componente pai (aoEnviarForm)\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField // value={nome}\n      // onChange={(evento) => {\n      //     let tempNome = evento.target.value\n      //     if (tempNome.length >= 3) {\n      //         tempNome = tempNome.substr(0, 3)\n      //     }\n      //     setNome(tempNome)\n      , {\n        onChange: evento => {\n          setNome(evento.target.value);\n        },\n        id: \"nome\",\n        label: \"Nome\",\n        variant: \"outlined\",\n        className: \"FormularioCadastro_inputs\",\n        margin: \"dense\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: evento => {\n          setSobrenome(evento.target.value);\n        },\n        id: \"Sobrenome\",\n        label: \"Sobrenome\",\n        variant: \"outlined\",\n        margin: \"dense\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: evento => {\n          setCpf(evento.target.value);\n        } // onBlur é um onChange mas quando vc sai do campo de preenchimento e vai para o outro, assim ele aciona\n        ,\n        onBlur: evento => {\n          const ehvalido = props.validarCPF(cpf); //vai receber um obj com dados da validação (cpf: valido true ou false e texto)\n\n          setErros({\n            cpf: ehvalido\n          }); // atualiza o obj erros no ampo cpf\n        },\n        id: \"cpf\",\n        label: \"CPF\",\n        variant: \"outlined\",\n        margin: \"dense\",\n        fullWidth: true,\n        error: !erros.cpf.valido // true fica vermelha e false normal\n        ,\n        helperText: erros.cpf.texto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: \"Promo\\xE7\\xF5es\",\n        checked: promocoes,\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          onChange: evento => {\n            setPromocoes(evento.target.checked);\n          },\n          name: \"Promo\\xE7\\xF5es\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: \"Novidades\",\n        checked: novidades,\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          onChange: evento => {\n            setNovidades(evento.target.checked);\n          },\n          name: \"Novidades\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_c = FormularioJob;\nexport default FormularioJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioJob\");","map":{"version":3,"sources":["/home/marco/Documents/project_react/alura_frontend/proj_tws/src/components/formulario.jsx"],"names":["React","useState","TextField","Button","Switch","FormControlLabel","FormularioJob","event","preventDefault","props","aoEnviar","nome","sobrenome","cpf","promocoes","novidades","evento","setNome","target","value","setSobrenome","setCpf","ehvalido","validarCPF","setErros","erros","valido","texto","setPromocoes","checked","setNovidades"],"mappings":"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","sourcesContent":["import \"./formulario.css\"\nimport React, { useState } from 'react';\nimport { TextField, Button, Switch, FormControlLabel } from '@material-ui/core/';\n\n\nfunction FormularioJob() {\n\n    return (\n\n\n        <div className=\"FormularioCadastro_div\">\n            <form className=\"FormularioCadastro_form\"\n                onSubmit={(event) => { // props recebe parâmetro da classe pai\n                    event.preventDefault() //Não permite que o botão do formulário recarregue a página, mas sim execute o submit\n                    // let dicionario = { nome, sobrenome, cpf, promocoes, novidades }\n                    // let lista = [nome, sobrenome, cpf, promocoes, novidades]\n                    // let array = [{ nome, sobrenome, cpf, promocoes, novidades }]\n                    // console.log(dicionario, typeof (dicionario))\n                    // console.log(dicionario.sobrenome)\n                    // console.log(lista, typeof (lista))\n                    // console.log(lista[1])\n                    // console.log(array, typeof (array))\n                    // console.log(array[0].sobrenome)\n                    // console.log(nome, sobrenome, cpf, promocoes, novidades)\n                    props.aoEnviar({ nome, sobrenome, cpf, promocoes, novidades }) //aoEnviar é a func do componente pai (aoEnviarForm)\n\n\n                }}\n            >\n                <TextField\n                    // value={nome}\n                    // onChange={(evento) => {\n                    //     let tempNome = evento.target.value\n                    //     if (tempNome.length >= 3) {\n                    //         tempNome = tempNome.substr(0, 3)\n                    //     }\n                    //     setNome(tempNome)\n\n                    onChange={(evento) => {\n                        setNome(evento.target.value)\n                    }}\n                    id=\"nome\"\n                    label=\"Nome\"\n                    variant=\"outlined\"\n                    className=\"FormularioCadastro_inputs\"\n                    margin=\"dense\"\n                    fullWidth\n\n\n                />\n                <TextField\n                    onChange={(evento) => {\n                        setSobrenome(evento.target.value)\n                    }}\n                    id=\"Sobrenome\"\n                    label=\"Sobrenome\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth />\n                <TextField\n                    onChange={(evento) => {\n                        setCpf(evento.target.value)\n\n                    }}\n                    // onBlur é um onChange mas quando vc sai do campo de preenchimento e vai para o outro, assim ele aciona\n                    onBlur={(evento) => {\n                        const ehvalido = props.validarCPF(cpf) //vai receber um obj com dados da validação (cpf: valido true ou false e texto)\n                        setErros({ cpf: ehvalido }) // atualiza o obj erros no ampo cpf\n                    }}\n                    id=\"cpf\"\n                    label=\"CPF\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    error={!erros.cpf.valido}\n                    // true fica vermelha e false normal\n                    helperText={erros.cpf.texto}\n                />\n\n                <FormControlLabel\n                    label=\"Promoções\"\n                    checked={promocoes}\n                    control={<Switch onChange={(evento) => {\n                        setPromocoes(evento.target.checked)\n                    }}\n                        name=\"Promoções\" color=\"primary\" />} />\n                <FormControlLabel\n                    label=\"Novidades\"\n                    checked={novidades}\n                    control={<Switch onChange={(evento) => {\n                        setNovidades(evento.target.checked)\n                    }}\n                        name=\"Novidades\" color=\"primary\" />} />\n\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\">Cadastrar</Button>\n\n\n            </form>\n        </div>\n\n\n    )\n}\n\nexport default FormularioJob"]},"metadata":{},"sourceType":"module"}